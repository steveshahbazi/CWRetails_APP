// <auto-generated />
using System;
using CWRetails_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CWRetails_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230603034906_initialiseDatabase")]
    partial class initialiseDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CWRetails_API.Model.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ham"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mushrooms"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Olives"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Salami"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Capsicum"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Chilli"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Spinach"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ricotta"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Cherry Tomatoes"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Onion"
                        });
                });

            modelBuilder.Entity("CWRetails_API.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PizzeriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzeriaId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CWRetails_API.Model.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PizzeriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzeriaId");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 20m,
                            Name = "Capricciosa",
                            PizzeriaId = 1
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 18m,
                            Name = "Mexicana",
                            PizzeriaId = 1
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 22m,
                            Name = "Margherita",
                            PizzeriaId = 1
                        },
                        new
                        {
                            Id = 4,
                            BasePrice = 25m,
                            Name = "Capricciosa",
                            PizzeriaId = 2
                        },
                        new
                        {
                            Id = 5,
                            BasePrice = 17m,
                            Name = "Vegetarian",
                            PizzeriaId = 2
                        });
                });

            modelBuilder.Entity("CWRetails_API.Model.Pizzeria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pizzerias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Preston Pizzeria"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Southbank Pizzeria"
                        });
                });

            modelBuilder.Entity("CWRetails_API.Model.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Topping");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cheese",
                            Price = 1m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Capsicum",
                            Price = 1m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Salami",
                            Price = 1m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Olives",
                            Price = 1m
                        });
                });

            modelBuilder.Entity("IngredientPizza", b =>
                {
                    b.Property<int>("IngredientsId")
                        .HasColumnType("int");

                    b.Property<int>("PizzasId")
                        .HasColumnType("int");

                    b.HasKey("IngredientsId", "PizzasId");

                    b.HasIndex("PizzasId");

                    b.ToTable("IngredientPizza");
                });

            modelBuilder.Entity("OrderPizza", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("PizzasId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId", "PizzasId");

                    b.HasIndex("PizzasId");

                    b.ToTable("OrderPizza");
                });

            modelBuilder.Entity("PizzaTopping", b =>
                {
                    b.Property<int>("PizzasId")
                        .HasColumnType("int");

                    b.Property<int>("ToppingsId")
                        .HasColumnType("int");

                    b.HasKey("PizzasId", "ToppingsId");

                    b.HasIndex("ToppingsId");

                    b.ToTable("PizzaTopping");
                });

            modelBuilder.Entity("CWRetails_API.Model.Order", b =>
                {
                    b.HasOne("CWRetails_API.Model.Pizzeria", "Pizzeria")
                        .WithMany("Orders")
                        .HasForeignKey("PizzeriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizzeria");
                });

            modelBuilder.Entity("CWRetails_API.Model.Pizza", b =>
                {
                    b.HasOne("CWRetails_API.Model.Pizzeria", "Pizzeria")
                        .WithMany("Pizzas")
                        .HasForeignKey("PizzeriaId");

                    b.Navigation("Pizzeria");
                });

            modelBuilder.Entity("IngredientPizza", b =>
                {
                    b.HasOne("CWRetails_API.Model.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CWRetails_API.Model.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderPizza", b =>
                {
                    b.HasOne("CWRetails_API.Model.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CWRetails_API.Model.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaTopping", b =>
                {
                    b.HasOne("CWRetails_API.Model.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CWRetails_API.Model.Topping", null)
                        .WithMany()
                        .HasForeignKey("ToppingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CWRetails_API.Model.Pizzeria", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
